<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="61967" started-at="2019-06-12T09:10:09Z" finished-at="2019-06-12T09:11:11Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="61967" started-at="2019-06-12T09:10:09Z" finished-at="2019-06-12T09:11:11Z">
      <class name="casestudy.scenario1">
        <test-method status="PASS" signature="startreportbeforeTest()[pri:0, instance:casestudy.scenario1@7dc36524]" name="startreportbeforeTest" is-config="true" duration-ms="704" started-at="2019-06-12T14:40:09Z" finished-at="2019-06-12T14:40:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startreportbeforeTest -->
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:casestudy.scenario1@7dc36524]" name="beforeclass" is-config="true" duration-ms="26365" started-at="2019-06-12T14:40:10Z" finished-at="2019-06-12T14:40:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="testregistration()[pri:1, instance:casestudy.scenario1@7dc36524]" name="testregistration" duration-ms="15428" started-at="2019-06-12T14:40:36Z" finished-at="2019-06-12T14:40:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testregistration -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:casestudy.scenario1@7dc36524]" name="getResult" is-config="true" duration-ms="25" started-at="2019-06-12T14:40:51Z" finished-at="2019-06-12T14:40:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testregistration status=SUCCESS method=scenario1.testregistration()[pri:1, instance:casestudy.scenario1@7dc36524] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testlogin()[pri:2, instance:casestudy.scenario1@7dc36524]" name="testlogin" duration-ms="1342" started-at="2019-06-12T14:40:51Z" finished-at="2019-06-12T14:40:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testlogin -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:casestudy.scenario1@7dc36524]" name="getResult" is-config="true" duration-ms="0" started-at="2019-06-12T14:40:53Z" finished-at="2019-06-12T14:40:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testlogin status=SUCCESS method=scenario1.testlogin()[pri:2, instance:casestudy.scenario1@7dc36524] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="testcart()[pri:3, instance:casestudy.scenario1@7dc36524]" name="testcart" duration-ms="2115" started-at="2019-06-12T14:40:53Z" finished-at="2019-06-12T14:40:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcart -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:casestudy.scenario1@7dc36524]" name="getResult" is-config="true" duration-ms="1" started-at="2019-06-12T14:40:55Z" finished-at="2019-06-12T14:40:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcart status=SUCCESS method=scenario1.testcart()[pri:3, instance:casestudy.scenario1@7dc36524] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="testpayment()[pri:4, instance:casestudy.scenario1@7dc36524]" name="testpayment" duration-ms="14516" started-at="2019-06-12T14:40:55Z" finished-at="2019-06-12T14:41:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [payment successfull] but found [HTTP Status 500 – Internal Server Error]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [payment successfull] but found [HTTP Status 500 – Internal Server Error]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at casestudy.scenario1.testpayment(scenario1.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testpayment -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:casestudy.scenario1@7dc36524]" name="getResult" is-config="true" duration-ms="2" started-at="2019-06-12T14:41:09Z" finished-at="2019-06-12T14:41:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testpayment status=FAILURE method=scenario1.testpayment()[pri:4, instance:casestudy.scenario1@7dc36524] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endreportafterTest()[pri:0, instance:casestudy.scenario1@7dc36524]" name="endreportafterTest" is-config="true" duration-ms="1424" started-at="2019-06-12T14:41:09Z" finished-at="2019-06-12T14:41:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endreportafterTest -->
      </class> <!-- casestudy.scenario1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
